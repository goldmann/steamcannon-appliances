#!/bin/sh
#
# steamcannon-agent     Manages SteamCannon Agent
#
# chkconfig: 345 85 35
# description: SteamCannon Agent service
# processname: thin

### BEGIN INIT INFO
# Provides: steamcannon-agent
# Required-Start: $network $syslog
# Required-Stop: $network
# Default-Start:
# Default-Stop:
# Short-Description: SteamCannon Agent service
# Description: SteamCannon Agent service
### END INIT INFO

PID_FILE=/var/lock/steamcannon-agent.pid
STEAMCANNON_AGENT_HOME=/usr/share/steamcannon-agent
STEAMCANNON_AGENT_ENVIRONMENT=${STEAMCANNON_AGENT_ENVIRONMENT:-"development"}

THIN=/usr/lib/ruby/gems/1.8/bin/thin

# Source function library.
. /etc/init.d/functions

# Source networking configuration.
. /etc/sysconfig/network

# Check that networking is up.
[ ${NETWORKING} = "no" ] && exit 0

NAME="$(basename $0)"
unset ISBOOT
if [ "${NAME:0:1}" = "S" -o "${NAME:0:1}" = "K" ]; then
    NAME="${NAME:3}"
    ISBOOT="1"
fi

function procrunning() {
    procid=0
    for procid in `pidof thin`; do
        ps -fp $procid | grep "thin server (0.0.0.0:7575)" > /dev/null && pid=$procid
    done
}

function success_or_failure() {
    if [ $RETVAL -eq 0 ]; then
        echo_success
    else
        echo_failure
    fi

    echo
}

start() {
    echo -n "Starting ${NAME}: "

    cd $STEAMCANNON_AGENT_HOME
    $THIN -C config/thin/$STEAMCANNON_AGENT_ENVIRONMENT.yaml start > /dev/null
    RETVAL=$?

    success_or_failure

    return $RETVAL
}

stop() {
    echo -n "Stopping ${NAME}: "

    pid=0
    procrunning

    if [ $pid = '0' ]; then
        echo -n -e "No process is currently running "
        RETVAL=0
        success_or_failure
        return $RETVAL 
    fi

    cd $STEAMCANNON_AGENT_HOME
    $THIN -C config/thin/$STEAMCANNON_AGENT_ENVIRONMENT.yaml stop > /dev/null
    RETVAL=$?

    success_or_failure

    return $RETVAL
}

status() {
    pid=0
    procrunning
    if [ $pid == 0 ]; then
        if [ -f $JBOSSLOCK ]; then
            echo "${NAME} is dead but subsys locked";
            return 2
        fi
        if [ -f $PID_FILE ]; then
            echo "${NAME} is dead but pid file exists";
            return 3
        fi
        echo "${NAME} is stopped";
        return 0
    else
        echo "${NAME} (pid $pid) is running...";
        return 0
    fi
}

case "$1" in
start)
    start
    ;;
stop)
    stop
    ;;
restart|reload)
    stop
    sleep 1
    start
    ;;
status)
    status
    ;;
help)
    echo "usage: ${NAME} (start|stop|status|restart|help)"
    ;;
*)
    echo "usage: ${NAME} (start|stop|status|restart|help)"
    exit 1
esac

exit $RETVAL
